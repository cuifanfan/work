var scope = "global scope";
function checkscope () {
  var scope = "local scope";
  function f () {
    return scope;
  }
  return f;
}
checkscope()();

// 1.创建全局执行上下文，并把它压入执行上下文栈。
// 2.全局执行上下文初始化(VO、作用域链、this)
// 3.全局上下文初始化的同时创建checkscope函数，保存作用域链到[[Scope]]
// 4.执行代码，修改全局执行上下文中VO里属性的值。
// 5.执行到函数调用，创建函数执行上下文，并把它压入执行上下文栈
// 6.函数执行上下文初始化：
//   6.1 复制[[Scope]]，保存作用域链
//   6.2 用arguments初始化VO
//   6.3 进入函数执行上下文，VO活化为AO，给AO添加参数、函数声明、变量声明
//   6.4 把AO添加到作用域链前端
// 7. 执行函数中的代码，给AO中的变量、函数声明添加值
// 8. 函数执行完毕，从上下文调用栈中弹出，在原本位置返回f
// 9. 执行f函数，创建函数上下文，并把它压入调用栈
// 10. 函数执行上下文初始化：后续步骤同上
// ...
// 函数执行完毕，弹出调用栈。
// 全局执行上下文弹出调用栈