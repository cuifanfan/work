// 作用域链在函数被创建的时候就已经定义了
// 函数激活时，进入函数上下文，就会把AO添加到作用域链的最前端



// 函数执行上下文中作用域链和变量对象的创建过程：
var scope = "global scope";

function checkscope() {
  var scope2 = 'local scope';
  return scope2;
}
checkscope();

// 1.函数被创建、保存作用域链到内部属性[[Scope]]
// 2.执行函数，创建函数执行上下文，把函数执行上下文压入执行上下文调用栈
// 3.复制[[Scope]]创建作用域链
// 4.创建变量对象(用arguments初始化)
// 5.进入函数执行上下文，变量对象被激活变为活动对象AO，添加形参(有值)、函数声明、变量声明到AO
// 6.把AO加入到作用域链中
// 7.执行函数中的代码，修改AO中的值
// 8.函数执行完毕、函数执行上下文出栈